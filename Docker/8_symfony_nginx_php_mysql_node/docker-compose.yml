version: '3'

networks:
    nginx-php8-mysql8-node:

services:

    # nginx
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - 8080:80
        volumes:
            - ./app:/var/www/project
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php8-service
            - mysql8-service
        networks:
            - nginx-php8-mysql8-node

    # php
    php8-service:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: php8-container
        ports:
            - 9000:9000
        volumes:
            - ./app:/var/www/project
        networks:
            - nginx-php8-mysql8-node

    # mysql
    mysql8-service:
        image: mysql:8
        container_name: mysql8-container
        ports:
            - 4306:3306
        volumes:
            - ./mysql:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: unless-stopped  
        environment:
            # MYSQL_USER: user # no need root by default
            MYSQL_ROOT_PASSWORD: password
            # MYSQL_PASSWORD: password
        networks:
            - nginx-php8-mysql8-node

    adminer:
        image: adminer
        restart: unless-stopped 
        ports:
            - 8085:8080
        networks:
            - nginx-php8-mysql8-node

    # node
    node-service:
        build:
            context: .
            dockerfile: ./docker/node/Dockerfile
        # image: node:16.0.0-alpine3.12  # another way
        tty: true
        container_name: node-container
        volumes:
            - ./app:/var/www/project
        working_dir: /var/www/project
        networks:
            - nginx-php8-mysql8-node
