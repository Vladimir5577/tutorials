Планировщик --- это код который ответственный какую горутину выбирать.

// ===========================================

	Состояние горутины.
	-------------------

1. Running  - выполняется.
2. Runnable - готова к выполнению.
3. Waiting  - остановлена и ожидает чего-то.

// ===========================================
	
	№1 Модель.
	----------

 Выполняет N горутин на одном потоке.
 Переключается стек поинтер и бэйс поинтер.

// ===========================================

	GMP модель.
	-----------

G - Goroutine (что исполняем).

M - Nachine (где исполняем).

P - Processor (права и ресурсы для исполнения 
				ввиде горутин, кеша памяти из хипа, 
				ввиде некоторых ресурсов чтоб некоторый поток 
				мог брать горутины из этой очереди и исполнять их).


Буквы G, M, P --- это структуры данных в Go.

runtime.GOMAXPROCS(0) --- при передачи нуля работает как геттер (получаем коло-во ядер процессора)
runtime.GOMAXPROCS(5) --- при передаче больше нуля работает как сэттер - устанавливает макс кол-во ядер


// ===========================================

	Syscall.
	-------

Рантайм Go не любит syscall.

Syscall --- звонок в ядро операционной системы.
Предпологает что поток операционной системы переходит в waiting.
Очередь горутин никто не исполняет.

// ===========================================

	Handoff.
	--------



// ===========================================

// ===========================================

// ===========================================

// ===========================================

// ===========================================