Строки в Go --- последовательность байт и ничего более.

type _string struct {
    elements *byte
    len      int
}

Rune --- алиас тип int32

Строки в Go используются как константы (неизменяемые)
Строки можно конкатенировать с + и +=

String concatenations with the + operator are specially
optimized so that only one memory allocation is made in 
each of such concatenations, no matter how many strings
are concatenated in a s0 + s1 + ... + sn expression

Строки можно сравнивать между собой !=, ==, <, >, <=, =>
строки сравниваются друг с другом байт за байтом.

Сравнение строк на равенство реализовано так,
сначала проверяется размер, затем адреса указателей,
и только потом итнрация по каждому байту.

Можно узнать длинну строки len(x) --- вернет кол-во байт.
Можно обратиться к n-ому байту строки [n]
можно получить подстроку [n:m]
нельзя взять указатель на один из байт строки --- т.к чтоб нельзя было изменить

// ======================================

Строки можно конвертировать:
    - []byte и наоборот
    - []rune и наоборот

При конвертации будет аллокация памяти - так как 
строки неизменяемые в отличие от срезов, поэтому
они не должны разделять данные.
