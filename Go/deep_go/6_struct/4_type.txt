    Type defenition. --- создает новый тип.
    ----------------

type NewTypeName int

type (
    NewTypeName1 string
    NewTypeName2 NewTypeName
)


    Type alias. --- Не создает новый тип, просто псевдоним типа.
    -----------

type (
    Name = string
    Age  = int
)

type Table = map[Name]Age


..

// =======================================

Можно объявить метод для типа Т, если:
    1. Тип Т не является базовым типом данных и его алиасом.
    2. Тип Т находится в том же пакете, где и метод.
    3. Тип Т не должен быть указателем.
    4. Тип Т не должен быть интерфейсом.


type (
	IntAlias = int
	IntType  int
)

func (i int) Do()      {} // compilation error: basic type
func (i IntAlias) Do() {} // compilation error: basic type
func (i IntType) Do()  {} // ok

type (
	IntPtrAlias = *int
	IntPtrType  *int
)

func (i IntPtrAlias) Do() {} // compilation error: pointer
func (i IntPtrType) Do()  {} // compilation error: pointer

type (
	CloserAlias = io.Closer
	CloserType  io.Closer
)

func (i io.Closer) Do()   {} // compilation error: interface
func (i CloserAlias) Do() {} // compilation error: interface
func (i CloserType) Do()  {} // compilation error: interface