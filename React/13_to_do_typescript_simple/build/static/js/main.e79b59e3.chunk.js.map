{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["TodoItem","props","id","title","complete","removeTodo","toggleTodo","type","checked","onChange","onClick","TodoList","items","map","todo","App","useState","value","setValue","todos","setTodos","inputRef","useRef","addTodo","Date","now","useEffect","current","focus","className","e","target","onKeyDown","key","ref","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAwBeA,EAjBuB,SAACC,GAAW,IAEzCC,EAAgDD,EAAhDC,GAAIC,EAA4CF,EAA5CE,MAAOC,EAAqCH,EAArCG,SAAUC,EAA2BJ,EAA3BI,WAAYC,EAAeL,EAAfK,WAEzC,OACC,gCACC,uBACCC,KAAK,WACLC,QAASJ,EACTK,SAAU,kBAAMH,EAAWJ,MAE3BC,EACD,wBAAQO,QAAS,kBAAML,EAAWH,IAAlC,mBCUYS,EApB4B,SAACV,GAAW,IAE9CW,EAAkCX,EAAlCW,MAAON,EAA2BL,EAA3BK,WAAYD,EAAeJ,EAAfI,WAE3B,OACC,8BAEEO,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,aAECR,WAAYA,EACZD,WAAYA,GACRS,GAHCA,EAAKZ,UCmDDa,EAjEO,WAAO,IAAD,EAEDC,mBAAS,IAFR,mBAEpBC,EAFoB,KAEbC,EAFa,OAGDF,mBAAkB,IAHjB,mBAGpBG,EAHoB,KAGbC,EAHa,KAKrBC,EAAWC,iBAAyB,MAUpCC,EAAU,WACXN,IACHG,EAAS,GAAD,mBAAKD,GAAL,CAAY,CACnBjB,GAAIsB,KAAKC,MACTtB,MAAOc,EACPb,UAAU,MAGXc,EAAS,MAuBV,OAJDQ,qBAAU,WACLL,EAASM,SAASN,EAASM,QAAQC,UACrC,IAGA,sBAAKC,UAAU,MAAf,UACE,kDACA,uBACCZ,MAAOA,EACPR,SA5C2D,SAACqB,GACjEZ,EAASY,EAAEC,OAAOd,QA4Cbe,UAzC8D,SAACF,GACtD,UAAVA,EAAEG,KAAiBV,KAyClBW,IAAKb,IAEN,wBAAQX,QAASa,EAAjB,iBACA,cAAC,EAAD,CACCX,MAAOO,EACPd,WA/Ba,SAACH,GACnBkB,EAASD,EAAMgB,QAAO,SAAArB,GAAI,OAAIA,EAAKZ,KAAOA,OA+BrCI,WA5Ba,SAACJ,GACnBkB,EAASD,EAAMN,KAAI,SAAAC,GAClB,OAAIA,EAAKZ,KAAOA,EAAWY,EAEpB,2BACHA,GADJ,IAECV,UAAWU,EAAKV,sBCnCpBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e79b59e3.chunk.js","sourcesContent":["import { ITodo } from '../types/data';\n\ninterface ITodoItem extends ITodo {\n\tremoveTodo: (id: number) => void;\n\ttoggleTodo: (id: number) => void;\n}\n\nconst TodoItem: React.FC<ITodoItem> = (props) => {\n\n\tconst { id, title, complete, removeTodo, toggleTodo } = props;\n\n\treturn (\n\t\t<div>\n\t\t\t<input \n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={complete}\n\t\t\t\tonChange={() => toggleTodo(id)}\n\t\t\t/>\n\t\t\t{title}\n\t\t\t<button onClick={() => removeTodo(id)}>X</button>\n\t\t</div>\n\t);\n};\n\nexport default TodoItem;","import { ITodo } from '../types/data';\nimport TodoItem from './TodoItem';\n\ninterface ITodoListProps {\n\titems: ITodo[];\n\ttoggleTodo: (id: number) => void;\n\tremoveTodo: (id: number) => void;\n}\n\nconst TodoList: React.FC<ITodoListProps> = (props) => {\n\n\tconst { items, toggleTodo, removeTodo } = props;\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\titems.map(todo => \n\t\t\t\t\t<TodoItem \n\t\t\t\t\t\tkey={todo.id} \n\t\t\t\t\t\ttoggleTodo={toggleTodo}\n\t\t\t\t\t\tremoveTodo={removeTodo}\n\t\t\t\t\t\t{...todo} \n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;","import { useState, useEffect, useRef } from 'react';\nimport { ITodo } from './types/data';\nimport TodoList from './components/TodoList';\n\nconst App: React.FC = () => {\n\n\tconst [value, setValue] = useState('');\n\tconst [todos, setTodos] = useState<ITodo[]>([]);\n\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\n\tconst handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n\t\tsetValue(e.target.value);\n\t};\n\n\tconst handleKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n\t\tif (e.key === 'Enter') addTodo();\n\t};\n\n\tconst addTodo = () => {\n\t\tif (value) {\n\t\t\tsetTodos([...todos, {\n\t\t\t\tid: Date.now(),\n\t\t\t\ttitle: value,\n\t\t\t\tcomplete: false,\n\t\t\t}]);\n\n\t\t\tsetValue('');\t\t\t\n\t\t}\n\t};\n\n\tconst removeTodo = (id: number): void => {\n\t\tsetTodos(todos.filter(todo => todo.id !== id));\n\t};\n\n\tconst toggleTodo = (id: number): void => {\n\t\tsetTodos(todos.map(todo => {\n\t\t\tif (todo.id !== id) return todo;\n\n\t\t\treturn {\n\t\t\t\t...todo,\n\t\t\t\tcomplete: !todo.complete\n\t\t\t};\n\t\t}));\n\t};\n\n\tuseEffect(() => {\n\t\tif (inputRef.current) inputRef.current.focus();\n\t}, []);\n\n  return (\n    <div className=\"App\">\n      <h1>To do typescript</h1>\n      <input \n      \tvalue={value}\n      \tonChange={handleChange}\n      \tonKeyDown={handleKeyDown}\n      \tref={inputRef}\n      />\n      <button onClick={addTodo} >Add</button>\n      <TodoList\n      \titems={todos}\n      \tremoveTodo={removeTodo}\n      \ttoggleTodo={toggleTodo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}