{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAmFeA,G,wDA9Eb,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IALU,E,wDASPC,EAAKC,GAEhBC,KAAKC,SAAL,eACGH,EAAMC,M,gCAMT,IAAMH,EAAU,CACdM,GAAI,EAAIC,KAAKC,SACbL,MAAOC,KAAKL,MAAMC,QAAQS,SAItBR,EAAI,YAAOG,KAAKL,MAAME,MAG5BA,EAAKS,KAAKV,GAGVI,KAAKC,SAAS,CACZJ,OACAD,QAAS,O,iCAIDM,GAEV,IAGMK,EAHI,YAAOP,KAAKL,MAAME,MAGHW,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDF,KAAKC,SAAS,CAACJ,KAAMU,M,+BAGZ,IAAD,OACR,OACE,qBAAKG,UAAU,MAAf,SACE,iDAGE,uBACEC,KAAK,OACLC,YAAY,oBACZb,MAAQC,KAAKL,MAAMC,QACnBiB,SAAY,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOjB,UAExD,wBAAQkB,QAAS,kBAAM,EAAKC,WAA5B,iBAGA,uBACA,6BACGlB,KAAKL,MAAME,KAAKsB,KAAI,SAAAV,GACnB,OACE,+BACGA,EAAKV,MACN,wBAAQkB,QAAS,kBAAM,EAAKG,WAAWX,EAAKP,KAA5C,iBAFOO,EAAKP,kB,GAnEZmB,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.3f988db9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  \n  constructor (props) {\n    super(props);\n\n    this.state = {\n      newItem: '',\n      list: []\n    }\n  }\n\n  updateInput (key, value) {\n    // update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem () {\n    // create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    // copy of current list of item\n    const list = [...this.state.list];\n\n    // add new item to list\n    list.push(newItem);\n\n    // update state with new list and reset newItem input\n    this.setState({\n      list,\n      newItem: ''\n    });\n  }\n\n  deleteItem (id) {\n    // copy current list of items\n    const list = [...this.state.list];\n\n    // filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list: updatedList});\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <div>\n          Add an Item...\n\n          <input \n            type=\"text\"\n            placeholder=\"Type item here...\"\n            value={ this.state.newItem }\n            onChange = {e => this.updateInput(\"newItem\", e.target.value)}\n          />\n          <button onClick={() => this.addItem()} >\n            Add\n          </button>\n          <br />\n          <ul>\n            {this.state.list.map(item => {\n              return (\n                <li key={item.id}>\n                  {item.value}\n                  <button onClick={() => this.deleteItem(item.id)}>X</button>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}