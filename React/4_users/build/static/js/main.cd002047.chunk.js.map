{"version":3,"sources":["Nav.js","About.js","Users.js","ItemDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","navStyle","color","to","style","className","About","Shop","useEffect","fetchItems","useState","items","setItems","a","fetch","data","json","console","log","map","item","id","name","Item","match","fetchItem","setItem","params","country","Home","App","path","exact","component","Users","ItemDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAyBeA,MAtBf,WACC,IAAMC,EAAW,CAChBC,MAAO,SAGP,OACE,gCACC,cAAC,IAAD,CAAMC,GAAG,IAAIC,MAAQH,EAArB,SACG,wCAEF,qBAAII,UAAU,YAAd,UACC,cAAC,IAAD,CAAMF,GAAG,SAASC,MAAQH,EAA1B,SACC,yCAED,cAAC,IAAD,CAAME,GAAG,SAASC,MAAQH,EAA1B,SACC,gDCROK,MARf,WACE,OACE,8BACE,+C,gCC8BSC,MA/Bf,WACCC,qBAAU,WACTC,MACE,IAHY,MAKWC,mBAAS,IALpB,mBAKRC,EALQ,KAKDC,EALC,KAOTH,EAAU,uCAAG,8BAAAI,EAAA,sEACCC,MAAM,iCADP,cACZC,EADY,gBAEEA,EAAKC,OAFP,OAEZL,EAFY,OAIlBM,QAAQC,IAAIP,GACZC,EAASD,GALS,2CAAH,qDAQf,OACE,gCACE,uCACCA,EAAMQ,KAAI,SAAAC,GACV,OACC,8BACC,cAAC,IAAD,CAAMjB,GAAE,gBAAWiB,EAAKC,IAAxB,SACC,6BAAKD,EAAKE,UAFDF,EAAKC,WCMTE,MA1Bf,YAA0B,IAAVC,EAAS,EAATA,MACfhB,qBAAU,WACTiB,MAEE,IAJqB,MAMAf,mBAAS,IANT,mBAMjBU,EANiB,KAMXM,EANW,KAQlBD,EAAS,uCAAG,8BAAAZ,EAAA,sEACOC,MAAM,qCAAD,OAAsCU,EAAMG,OAAON,KAD/D,cACXI,EADW,gBAEEA,EAAUT,OAFZ,OAEXI,EAFW,OAGjBM,EAAQN,GACRH,QAAQC,IAAIE,EAAKE,MAJA,2CAAH,qDAOd,OACE,gCACE,sCACA,sCAASF,EAAKC,MACd,wCAAWD,EAAKE,QAChB,wCAAWF,EAAKQ,e,OCDtB,IAAMC,EAAO,WACX,OACA,gCACE,2CACA,oXAWWC,EA/Bf,WACE,OACE,cAAC,IAAD,UACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0B,KAAK,IAAIC,OAAK,EAACC,UAAYJ,IAClC,cAAC,IAAD,CAAOE,KAAK,SAASE,UAAW3B,IAChC,cAAC,IAAD,CAAOyB,KAAK,SAASC,OAAK,EAACC,UAAWC,IACtC,cAAC,IAAD,CAAOH,KAAK,YAAYE,UAAWE,aCJ9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cd002047.chunk.js","sourcesContent":["import './App.css';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n\tconst navStyle = {\n\t\tcolor: 'white'\n\t};\n\n  return (\n    <nav>\n    \t<Link to='/' style={ navStyle }>\n      \t\t<h3>Logo</h3>\n      \t</Link>\n      <ul className=\"nav-links\">\n      \t<Link to='/about' style={ navStyle }>\n      \t\t<li>About</li>\n      \t</Link>\n      \t<Link to='/users' style={ navStyle }>\n\t      \t<li>Users</li>\n      \t</Link>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import './App.css';\n\nfunction About() {\n  return (\n    <div>\n      <h1>About Page</h1>\n    </div>\n  );\n}\n\nexport default About;\n","import './App.css';\nimport React , { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Shop() {\n\tuseEffect(() => {\n\t\tfetchItems();\n\t}, []);\n\n\tconst [items, setItems] = useState([]);\n\n\tconst fetchItems = async () => {\n\t\tconst data = await fetch('http://62.173.140.14/data.php');\n\t\tconst items = await data.json();\n\n\t\tconsole.log(items);\n\t\tsetItems(items);\n\t};\n\n  return (\n    <div>\n      <h1>Users</h1>\n     \t{items.map(item => {\n     \t\treturn (\n     \t\t\t<div key={ item.id }>\n     \t\t\t\t<Link to={`/user/${item.id}`}>\n\t\t     \t\t\t<h2>{item.name}</h2>\n\t\t     \t\t</Link>\n     \t\t\t</div>\n     \t\t);\n     \t})}\n    </div>\n  );\n}\n\nexport default Shop;\n","import './App.css';\nimport React , { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nfunction Item({ match }) {\n\tuseEffect(() => {\n\t\tfetchItem();\n\t\t// console.log(match);\n\t}, []);\n\n\tconst [item, setItem] = useState({});\n\n\tconst fetchItem = async () => {\n\t\tconst fetchItem = await fetch(`http://62.173.140.14/data.php/?id=${match.params.id}`);\n\t\tconst item = await fetchItem.json();\n\t\tsetItem(item);\n\t\tconsole.log(item.name);\n\t};\n\n  return (\n    <div>\n      <h1>Item</h1>\n      <h1>Id: {item.id}</h1>\n      <h1>Name: {item.name}</h1>\n      <h1>Name: {item.country}</h1>\n\n    </div>\n  );\n}\n\nexport default Item;\n","import './App.css';\nimport Nav from './Nav';\nimport About from './About';\nimport Users from './Users';\nimport ItemDetail from './ItemDetail';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={ Home } />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/users\" exact component={Users} />\n          <Route path=\"/user/:id\" component={ItemDetail} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst Home = () => {\n  return (\n  <div>\n    <h1>Home Page</h1>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n      cillum dolore eu fugiat nulla pariatur. \n    </p>\n  </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}